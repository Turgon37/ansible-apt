---
# defaults file for apt

# Enable facts deploiement
apt__facts: true

# Choose the monitoring backend to configure (if available)
# apt__monitoring:


### INSTALL CONFIGURATION
# ---------------------------------------
# List of dependencies packages
apt__packages_names:
  - apt-listchanges
  - debian-keyring
  - python-apt
  - unattended-upgrades


### APT CONFIGURATION
# ---------------------------------------
# This key is put into each included configuration file
# to means that this role manage it
# if purge (see below) is enable this key will be used to
# exclude managed files from purge
apt__ansible_managed_key: __ANSIBLE__APT__

# Set to true to purge unwanted included conf files
apt__conf_purge: false

# List of file basename to remove from APT configs
apt__conf_remove_files: []

# Set to true to purge unwanted included preferences files
apt__preferences_purge: false

# Configuration file for APT
apt__conf_directory: /etc/apt

# Include directory for configuration
apt__include_conf_directory: '{{ apt__conf_directory }}/apt.conf.d/'

# Where to place APT custom scripts
apt__custom_scripts_directory: /opt/apt-scripts

# Sources file
apt__sources_list: '{{ apt__conf_directory }}/sources.list'
# Sources iists directory
apt__sources_list_directory: '{{ apt__conf_directory }}/sources.list.d'

# Preferences file
apt__preferences: '{{ apt__conf_directory }}/preferences'

# Preferences directory
apt__preferences_directory: '{{ apt__conf_directory }}/preferences.d'


### APT ITEMS
# ---------------------------------------
# List of GPG Keys to include
apt__keys: []

# List of repositories to configure

# This list is intended to be used at global inventory level
apt__repositories_global: []

# This list is intended to be used at hostgroup inventory level
apt__repositories_group: []

# This list is intended to be used at host inventory level
apt__repositories_host: []

# Merged list of repositories
apt__repositories: '{{ apt__repositories_global
                        |union(apt__repositories_group)
                        |union(apt__repositories_host) }}'


# List of packages pinings

# This list is intended to be used at global inventory level
apt__pins_global: {}

# This list is intended to be used at hostgroup inventory level
apt__pins_group: {}

# This list is intended to be used at host inventory level
apt__pins_host: {}

# Merged list of pinnings
apt__pins: '{{ apt__pins_global
                |combine(apt__pins_group)
                |combine(apt__pins_host) }}'


### APT CONFIGURATION
# ---------------------------------------
## Base configuration
# Declare a proxy for APT request
# apt__proxy:
#   host:
#   port: 8080
#   https: true

# Limit APT bandwidth to this speed (in kBytes/sec)
# apt__http_download_limit: 0

## Periodic cron task
# Enable the update/upgrade script (0=disable)
apt__periodic_enabled: true

# Do "apt-get update" automatically every n-days (0=disable)
apt__periodic_update_package_lists: 0

# Run the "unattended-upgrade" security upgrade script every n-days (0=disabled)
apt__periodic_unattended_upgrade: 0

# Do "apt-get upgrade --download-only" every n-days (0=disable)
apt__periodic_download_upgradeable_packages: false

# Send report mail to root
#      0: no report             (or null string)
#      1: progress report       (actually any string)
#      2: + command outputs     (remove -qq, remove 2>/dev/null, add -d)
#      3: + trace on
apt__periodic_verbose: 0

# The apt cron job will delay its execution by a random
# time span between zero and 'APT::Periodic::RandomSleep' seconds.
# Note that sleeping in the apt job will be delaying the
# execution of all subsequent cron.daily jobs.
apt__periodic_random_sleep: 0

## Unattended Upgrades
# Send email to this address for problems or packages upgrades
# apt__unattended_upgrades_mail: ''

# Set this value to "true" to get emails only on errors.
apt__unattended_upgrades_mail_only_on_error: false

# This option allows you to control if on a unclean dpkg exit
# unattended-upgrades will automatically run
#   dpkg --force-confold --configure -a
apt__unattended_upgrades_auto_fix_interrupted_dpkg: true

# Split the upgrade into the smallest possible chunks so that
# they can be interrupted with SIGUSR1. This makes the upgrade
# a bit slower but it has the benefit that shutdown while a upgrade
# is running is possible (with a small delay)
apt__unattended_upgrades_minimal_steps: true

# Do automatic removal of new unused dependencies after the upgrade
# (equivalent to apt-get autoremove)
apt__unattended_upgrades_remove_unused_dependencies: alse

# Automatically reboot *WITHOUT CONFIRMATION*
#  if the file /var/run/reboot-required is found after the upgrade
apt__unattended_upgrades_automatic_reboot: false

# Automatically reboot even if there are users currently logged in.
apt__unattended_upgrades_automatic_reboot_withusers: false

# If automatic reboot is enabled and needed,
# reboot at the specific time instead of immediately
apt__unattended_upgrades_automatic_reboot_time: now

# Install all unattended-upgrades when the machine is shuting down
# instead of doing it in the background while the machine is running
# This will (obviously) make shutdown slower
apt__unattended_upgrades_install_on_shutdown: false

# List of packages to not update (regexp are supported)
apt__unattended_upgrades_package_blacklist: []


## Misc
# Path to the stamp file to update after each update
apt__update_stamp_file: /var/lib/apt/periodic/update-success-stamp

# If true, each apt-get update will generated cached list of package in files
# and each tols like facts,
# monitoring items will fetch packages updates from theses files
# instead of running apt-get directly. It is recommanded to let it to true
apt__use_cached_updates_list: true

# Path to the file which contains availables packages updates
apt__cached_updates_file: /var/lib/apt/periodic/packages-updates
# Path to the file which contains availabes packaes security updates
apt__cached_security_updates_file:
  /var/lib/apt/periodic/packages-security-updates

# Path to the file which contains availables packages updates
apt__cached_dist_updates_file: /var/lib/apt/periodic/packages-dist-updates
# Path to the file which contains availabes packaes security updates
apt__cached_security_dist_updates_file:
  /var/lib/apt/periodic/packages-security-dist-updates

# Default cache valid time for update operations
apt__cache_valid_time: 3600
