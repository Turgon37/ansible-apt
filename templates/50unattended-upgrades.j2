{%- import '_macros.j2' as macros with context -%}
//
// {{ ansible_managed }}
//

// Unattended-Upgrade::Origins-Pattern controls which packages are
// upgraded.
//
// Lines below have the format format is "keyword=value,...".  A
// package will be upgraded only if the values in its metadata match
// all the supplied keywords in a line.  (In other words, omitted
// keywords are wild cards.) The keywords originate from the Release
// file, but several aliases are accepted.  The accepted keywords are:
//   a,archive,suite (eg, "stable")
//   c,component     (eg, "main", "contrib", "non-free")
//   l,label         (eg, "Debian", "Debian-Security")
//   o,origin        (eg, "Debian", "Unofficial Multimedia Packages")
//   n,codename      (eg, "jessie", "jessie-updates")
//     site          (eg, "http.debian.net")
// The available values on the system are printed by the command
// "apt-cache policy", and can be debugged by running
// "unattended-upgrades -d" and looking at the log file.
//
// Within lines unattended-upgrades allows 2 macros whose values are
// derived from /etc/debian_version:
//   ${distro_id}            Installed origin.
//   ${distro_codename}      Installed codename (eg, "jessie")
Unattended-Upgrade::Origins-Pattern {
        // Codename based matching:
        // This will follow the migration of a release through different
        // archives (e.g. from testing to stable and later oldstable).
//      "o=Debian,n=jessie";
//      "o=Debian,n=jessie-updates";
//      "o=Debian,n=jessie-proposed-updates";
//      "o=Debian,n=jessie,l=Debian-Security";

        // Archive or Suite based matching:
        // Note that this will silently match a different release after
        // migration to the specified archive (e.g. testing becomes the
        // new stable).
//      "o=Debian,a=stable";
//      "o=Debian,a=stable-updates";
//      "o=Debian,a=proposed-updates";
        "origin=Debian,codename=${distro_codename},label=Debian-Security";
};

Unattended-Upgrade::Package-Blacklist {
{% for package in apt__unattended_upgrades_package_blacklist|d([]) %}
  "{{ package }}";
{% endfor %}
};

Unattended-Upgrade::AutoFixInterruptedDpkg "{{ macros.boolString(apt__unattended_upgrades_auto_fix_interrupted_dpkg) }}";
Unattended-Upgrade::MinimalSteps "{{ macros.boolString(apt__unattended_upgrades_minimal_steps) }}";
Unattended-Upgrade::InstallOnShutdown "{{ macros.boolString(apt__unattended_upgrades_install_on_shutdown) }}";

{% if apt__unattended_upgrades_mail is defined %}
Unattended-Upgrade::Mail "{{ apt__unattended_upgrades_mail }}";
{% endif %}
Unattended-Upgrade::MailOnlyOnError "{{ macros.boolString(apt__unattended_upgrades_mail_only_on_error) }}";

Unattended-Upgrade::Remove-Unused-Dependencies "{{ macros.boolString(apt__unattended_upgrades_remove_unused_dependencies) }}";

Unattended-Upgrade::Automatic-Reboot "{{ macros.boolString(apt__unattended_upgrades_automatic_reboot) }}";
Unattended-Upgrade::Automatic-Reboot-WithUsers "{{ macros.boolString(apt__unattended_upgrades_automatic_reboot_withusers) }}";
Unattended-Upgrade::Automatic-Reboot-Time "{{ apt__unattended_upgrades_automatic_reboot_time }}";

// Enable logging to syslog. Default is False
// Unattended-Upgrade::SyslogEnable "false";

// Specify syslog facility. Default is daemon
// Unattended-Upgrade::SyslogFacility "daemon";
